--------------------------------------------------------
--  This file was automatically generated by Ocarina  --
--  Do NOT hand-modify this file, as your             --
--  changes will be lost when you re-run Ocarina      --
--------------------------------------------------------
pragma Style_Checks
 ("NM32766");

with PolyORB_HI_Generated;
with PolyORB_HI.Marshallers_G;
pragma Elaborate_All (PolyORB_HI.Marshallers_G);

package body PolyORB_HI_Generated.Marshallers is

  --  Marshallers for interface type of thread receiver.impl

  --------------
  -- Marshall -- 
  --------------

  procedure Marshall
   (Data : PolyORB_HI_Generated.Activity.radar_system_receiver_impl_Interface;
    Message : in out PolyORB_HI.Messages.Message_Type)
  is
    use PolyORB_HI_Generated.Activity;
  begin
    if (Data.Port
      = PolyORB_HI_Generated.Activity.receiver_out)
    then
      PolyORB_HI_Generated.Marshallers.Marshall
       (Data.receiver_out_DATA,
        Message);
    end if;
  end Marshall;

  ----------------
  -- Unmarshall -- 
  ----------------

  procedure Unmarshall
   (Port : PolyORB_HI_Generated.Activity.radar_system_receiver_impl_Port_Type;
    Data : out PolyORB_HI_Generated.Activity.radar_system_receiver_impl_Interface;
    Message : in out PolyORB_HI.Messages.Message_Type)
  is
    receiver_in_DATA : PolyORB_HI_Generated.Types.Target_Distance;
    use PolyORB_HI_Generated.Activity;
  begin
    if (Port
      = PolyORB_HI_Generated.Activity.receiver_in)
    then
      PolyORB_HI_Generated.Marshallers.Unmarshall
       (receiver_in_DATA,
        Message);
      Data :=
       PolyORB_HI_Generated.Activity.radar_system_receiver_impl_Interface'
         (Port => PolyORB_HI_Generated.Activity.receiver_in,
          receiver_in_DATA => receiver_in_DATA);
    end if;
  end Unmarshall;

  --  Marshallers for DATA type target_distance

  package Target_Distance_Marshallers is
   new PolyORB_HI.Marshallers_G
     (PolyORB_HI_Generated.Types.Target_Distance);

  procedure Marshall
   (Data : PolyORB_HI_Generated.Types.Target_Distance;
    Message : in out PolyORB_HI.Messages.Message_Type)
   renames Target_Distance_Marshallers.Marshall;

  procedure Unmarshall
   (Data : out PolyORB_HI_Generated.Types.Target_Distance;
    Message : in out PolyORB_HI.Messages.Message_Type)
   renames Target_Distance_Marshallers.Unmarshall;

  --  Marshallers for interface type of thread analyser.impl

  --------------
  -- Marshall -- 
  --------------

  procedure Marshall
   (Data : PolyORB_HI_Generated.Activity.radar_system_analyser_impl_Interface;
    Message : in out PolyORB_HI.Messages.Message_Type)
  is
    use PolyORB_HI_Generated.Activity;
  begin
    if (Data.Port
      = PolyORB_HI_Generated.Activity.analyser_out)
    then
      PolyORB_HI_Generated.Marshallers.Marshall
       (Data.analyser_out_DATA,
        Message);
    end if;
  end Marshall;

  ----------------
  -- Unmarshall -- 
  ----------------

  procedure Unmarshall
   (Port : PolyORB_HI_Generated.Activity.radar_system_analyser_impl_Port_Type;
    Data : out PolyORB_HI_Generated.Activity.radar_system_analyser_impl_Interface;
    Message : in out PolyORB_HI.Messages.Message_Type)
  is
    from_receiver_DATA : PolyORB_HI_Generated.Types.Target_Distance;
    from_controller_DATA : PolyORB_HI_Generated.Types.Motor_Position;
    use PolyORB_HI_Generated.Activity;
  begin
    if (Port
      = PolyORB_HI_Generated.Activity.from_transmitter)
    then
      Data :=
       PolyORB_HI_Generated.Activity.radar_system_analyser_impl_Interface'
         (Port => PolyORB_HI_Generated.Activity.from_transmitter);
    elsif (Port
      = PolyORB_HI_Generated.Activity.from_receiver)
    then
      PolyORB_HI_Generated.Marshallers.Unmarshall
       (from_receiver_DATA,
        Message);
      Data :=
       PolyORB_HI_Generated.Activity.radar_system_analyser_impl_Interface'
         (Port => PolyORB_HI_Generated.Activity.from_receiver,
          from_receiver_DATA => from_receiver_DATA);
    elsif (Port
      = PolyORB_HI_Generated.Activity.from_controller)
    then
      PolyORB_HI_Generated.Marshallers.Unmarshall
       (from_controller_DATA,
        Message);
      Data :=
       PolyORB_HI_Generated.Activity.radar_system_analyser_impl_Interface'
         (Port => PolyORB_HI_Generated.Activity.from_controller,
          from_controller_DATA => from_controller_DATA);
    end if;
  end Unmarshall;

  --  Marshallers for DATA type target_position.impl

  package Target_Position_impl_Marshallers is
   new PolyORB_HI.Marshallers_G
     (PolyORB_HI_Generated.Types.Target_Position_impl);

  procedure Marshall
   (Data : PolyORB_HI_Generated.Types.Target_Position_impl;
    Message : in out PolyORB_HI.Messages.Message_Type)
   renames Target_Position_impl_Marshallers.Marshall;

  procedure Unmarshall
   (Data : out PolyORB_HI_Generated.Types.Target_Position_impl;
    Message : in out PolyORB_HI.Messages.Message_Type)
   renames Target_Position_impl_Marshallers.Unmarshall;

  --  Marshallers for DATA type motor_position

  package Motor_Position_Marshallers is
   new PolyORB_HI.Marshallers_G
     (PolyORB_HI_Generated.Types.Motor_Position);

  procedure Marshall
   (Data : PolyORB_HI_Generated.Types.Motor_Position;
    Message : in out PolyORB_HI.Messages.Message_Type)
   renames Motor_Position_Marshallers.Marshall;

  procedure Unmarshall
   (Data : out PolyORB_HI_Generated.Types.Motor_Position;
    Message : in out PolyORB_HI.Messages.Message_Type)
   renames Motor_Position_Marshallers.Unmarshall;

  --  Marshallers for interface type of thread display_panel.impl

  --------------
  -- Marshall -- 
  --------------

  procedure Marshall
   (Data : PolyORB_HI_Generated.Activity.radar_system_display_panel_impl_Interface;
    Message : in out PolyORB_HI.Messages.Message_Type)
  is
    pragma Unreferenced
     (Message);
    pragma Unreferenced
     (Data);
  begin
    null;
  end Marshall;

  ----------------
  -- Unmarshall -- 
  ----------------

  procedure Unmarshall
   (Port : PolyORB_HI_Generated.Activity.radar_system_display_panel_impl_Port_Type;
    Data : out PolyORB_HI_Generated.Activity.radar_system_display_panel_impl_Interface;
    Message : in out PolyORB_HI.Messages.Message_Type)
  is
    display_in_DATA : PolyORB_HI_Generated.Types.Target_Position_impl;
    use PolyORB_HI_Generated.Activity;
  begin
    if (Port
      = PolyORB_HI_Generated.Activity.display_in)
    then
      PolyORB_HI_Generated.Marshallers.Unmarshall
       (display_in_DATA,
        Message);
      Data :=
       PolyORB_HI_Generated.Activity.radar_system_display_panel_impl_Interface'
         (Port => PolyORB_HI_Generated.Activity.display_in,
          display_in_DATA => display_in_DATA);
    end if;
  end Unmarshall;

  --  Marshallers for interface type of thread transmitter.impl

  --------------
  -- Marshall -- 
  --------------

  procedure Marshall
   (Data : PolyORB_HI_Generated.Activity.radar_system_transmitter_impl_Interface;
    Message : in out PolyORB_HI.Messages.Message_Type)
  is
    pragma Unreferenced
     (Message);
    pragma Unreferenced
     (Data);
  begin
    null;
  end Marshall;

  ----------------
  -- Unmarshall -- 
  ----------------

  procedure Unmarshall
   (Port : PolyORB_HI_Generated.Activity.radar_system_transmitter_impl_Port_Type;
    Data : out PolyORB_HI_Generated.Activity.radar_system_transmitter_impl_Interface;
    Message : in out PolyORB_HI.Messages.Message_Type)
  is
    pragma Unreferenced
     (Port);
    pragma Unreferenced
     (Message);
    pragma Unreferenced
     (Data);
  begin
    null;
  end Unmarshall;

  --  Marshallers for interface type of thread controller.impl

  --------------
  -- Marshall -- 
  --------------

  procedure Marshall
   (Data : PolyORB_HI_Generated.Activity.radar_system_controller_impl_Interface;
    Message : in out PolyORB_HI.Messages.Message_Type)
  is
    use PolyORB_HI_Generated.Activity;
  begin
    if (Data.Port
      = PolyORB_HI_Generated.Activity.controller_out)
    then
      PolyORB_HI_Generated.Marshallers.Marshall
       (Data.controller_out_DATA,
        Message);
    end if;
  end Marshall;

  ----------------
  -- Unmarshall -- 
  ----------------

  procedure Unmarshall
   (Port : PolyORB_HI_Generated.Activity.radar_system_controller_impl_Port_Type;
    Data : out PolyORB_HI_Generated.Activity.radar_system_controller_impl_Interface;
    Message : in out PolyORB_HI.Messages.Message_Type)
  is
    controller_in_DATA : PolyORB_HI_Generated.Types.Motor_Position;
    use PolyORB_HI_Generated.Activity;
  begin
    if (Port
      = PolyORB_HI_Generated.Activity.controller_in)
    then
      PolyORB_HI_Generated.Marshallers.Unmarshall
       (controller_in_DATA,
        Message);
      Data :=
       PolyORB_HI_Generated.Activity.radar_system_controller_impl_Interface'
         (Port => PolyORB_HI_Generated.Activity.controller_in,
          controller_in_DATA => controller_in_DATA);
    end if;
  end Unmarshall;

end PolyORB_HI_Generated.Marshallers;
